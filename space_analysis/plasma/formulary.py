# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/plasma/00_ formulary.ipynb.

# %% auto 0
__all__ = ['df_beta', 'df_Alfven_speed']

# %% ../../nbs/plasma/00_ formulary.ipynb 1
import astropy.units as u
from plasmapy.formulary import beta, Alfven_speed
from plasmapy.particles import ParticleLike
import polars as pl

from typing import Optional

# %% ../../nbs/plasma/00_ formulary.ipynb 2
def df_beta(
    df: pl.DataFrame,
    T: str = "T",  # temperature of the plasma
    n: str = "n",  # particle density of the plasma
    B: str = "B",  # magnetic field in the plasma,
    col_name: str = "beta",
    T_unit: u.Unit = u.eV,
    n_unit: u.Unit = u.cm**-3,
    B_unit: u.Unit = u.nT,
) -> pl.DataFrame:
    _T = df[T].to_numpy() * T_unit
    _n = df[n].to_numpy() * n_unit
    _B = df[B].to_numpy() * B_unit

    _beta = beta(T=_T, n=_n, B=_B)

    return df.with_columns(pl.Series(_beta).alias(col_name))

# %% ../../nbs/plasma/00_ formulary.ipynb 3
def df_Alfven_speed(
    df: pl.DataFrame,
    B: str = "B",  # magnetic field in the plasma
    n: str = "n",  # particle density of the plasma
    ion: ParticleLike = "p+",
    col_name="Alfven_speed",
    B_unit: u.Unit = u.nT,
    n_unit: u.Unit = u.cm**-3,
    speed_unit: u.Unit = u.km / u.s,
):
    _B = df[B].to_numpy() * B_unit
    _n = df[n].to_numpy() * n_unit

    _Alfven_speed = Alfven_speed(B=_B, density=_n, ion=ion).to(speed_unit)

    return df.with_columns(pl.Series(_Alfven_speed).alias(col_name))
