# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/data_structure/00_config.ipynb.

# %% auto 0
__all__ = ['OutputConfig', 'PanelConfig', 'Config']

# %% ../../nbs/data_structure/00_config.ipynb 0
from pydantic import (
    StringConstraints,
    model_validator,
)
from pydantic.dataclasses import dataclass, Field

from datetime import datetime, date

from typing import Annotated

from ..plot.config import FigureExtraOptions

# %% ../../nbs/data_structure/00_config.ipynb 1
@dataclass
class OutputConfig:
    """Output configuration"""

    path: str = None
    filename: str = None

    formats: list[str] = Field(default_factory=list)
    display: bool = False

    figure: dict = Field(default_factory=dict)
    """Figure options"""

    figure_extra: FigureExtraOptions = Field(default_factory=FigureExtraOptions)
    """Extra figure options"""


@dataclass
class PanelConfig:
    """Panel configuration"""

    timerange: list[date | datetime] = None

    ds: str = None
    id: str = None
    name: str = None
    units: str = None
    labels: list[str] = Field(default_factory=list)

    satellite: Annotated[str, StringConstraints(to_lower=True)] = None
    instrument: Annotated[str, StringConstraints(to_lower=True)] = None
    datatype: str = None
    probe: str = None

# %% ../../nbs/data_structure/00_config.ipynb 2
@dataclass
class Config:
    panels: list[PanelConfig]
    timerange: list[datetime | date] = None
    output: OutputConfig = None
    backend: str = None

    @model_validator(mode="before")
    def set_default_timerange(cls, values):
        timerange = values.get("timerange", None)
        panels = values.get("panels", [])

        if timerange:
            for panel in panels:
                panel["timerange"] = panel.get("timerange") or timerange
        return values
