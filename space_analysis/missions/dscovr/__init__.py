# AUTOGENERATED! DO NOT EDIT! File to edit: ../../../nbs/missions/2015_dscovr.ipynb.

# %% auto 0
__all__ = ['Instruments', 'MagDataVars', 'PlasmaDataVars', 'download_data', 'load_data']

# %% ../../../nbs/missions/2015_dscovr.ipynb 1
import polars as pl
from ...io.cdf import cdf2pl
import pyspedas

from functools import partial
from typing import Literal, overload

# %% ../../../nbs/missions/2015_dscovr.ipynb 2
def download_data(**kwargs):
    return pyspedas.dscovr.load(downloadonly=True, **kwargs)

# %% ../../../nbs/missions/2015_dscovr.ipynb 3
Instruments = Literal["faraday_cup", "mag"]

MagDataVars = Literal[
    "B1F1",
    "B1GSE",
    "B1RTN",
]

PlasmaDataVars = Literal[
    "Np",  # Solar Wind Proton Number Density
    "V_GSE",
    "THERMAL_SPD",
    "THERMAL_TEMP",
]

# %% ../../../nbs/missions/2015_dscovr.ipynb 4
@overload
def load_data(
    instrument: Literal["mag"],
    var_names: list[MagDataVars],
    datatype: Literal["h0"],
    **kwargs
): ...


@overload
def load_data(
    instrument: Literal["faraday_cup"],
    var_names: list[PlasmaDataVars],
    datatype: Literal["h1"],
    **kwargs
): ...


def load_data(instrument="mag", var_names=None, datatype=None, **kwargs) -> pl.LazyFrame:

    if instrument == "mag":
        var_names = var_names or ["B1F1", "B1RTN"]
        datatype = datatype or "h0"
    elif instrument == "faraday_cup":
        var_names = var_names or ["Np", "V_GSE", "THERMAL_TEMP"]
        datatype = datatype or "h1"

    files = download_data(instrument=instrument, datatype=datatype, **kwargs)

    load_func = partial(cdf2pl, var_names=var_names)

    return pl.concat(load_func(file) for file in files)
